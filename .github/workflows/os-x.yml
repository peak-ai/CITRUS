# Triggered on push and pull request events
on: 
  pull_request:
    branches:
      - main

# Name of the workflow => usethis::use_github_actions_badge("CI-CD")
name: CI-CD Mac OS

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        r-version: ['release']

    steps:
      - uses: actions/checkout@v2
      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.r-version }}
      
      - uses: r-lib/actions/setup-pandoc@v1
          
      - name: "Install curl and pandoc for Linux"
        if: runner.os == 'Linux'
        run: |
          sudo apt install libcurl4-openssl-dev
          sudo apt-get install pandoc
          
      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
        
      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check package
        shell: Rscript {0}
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "error", check_dir = "check")
        
      - name: Unit test workflow
        run: |
          install.packages('devtools')
          devtools::test()
        shell: Rscript {0}
